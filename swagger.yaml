openapi: 3.0.0
info:
  title: Goomer Rango
  description: Solução proposta como desafio pela Goomer para ingresso de colaborador! Let's Goomer!!!
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1

paths:
  /restaurante:
    get:
      tags:
      - "Restaurante"
      summary: Retorna lista de restaurantes
      operationId: "restauranteAll"
      responses:
        "200":
          description: Retorna objeto contendo as informações do restaurante informado como parametro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfRestaurante"
  /restaurante/{id}:
    get:
      tags:
      - "Restaurante"
      summary: Retorna restaurante especifico, com base no id informado
      operationId: "restauranteById"
      parameters:
      - in: "path"
        name: id
        description: "Código do restaurante a ser buscado"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna objeto contendo as informações do restaurante informado como parametro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurante"
  /restaurante/create:
    post:
      tags:
      - "Restaurante"
      summary: Adiciona um novo restaurante, com base nas informações informadas
      operationId: "restauranteCreate"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                endereco:
                  type: string
                id_foto:
                  type: integer
                  nullable: true
                  default: null
              required:
                - nome
                - endereco
      responses:
        "200":
          description: Retorna objeto contendo as informações do restaurante informado como parametro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurante"
  /restaurante/edit/{id}:
    put:
      tags:
      - "Restaurante"
      summary: Atualiza as informações de um restaurante
      operationId: "restauranteEdit"
      parameters:
      - in: "path"
        name: id
        description: "Código do restaurante a ser buscado"
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                endereco:
                  type: string
                id_foto:
                  type: integer
                  nullable: true
                  default: null
              required:
                - nome
                - endereco
      responses:
        "200":
          description: Retorna objeto com as informações da alteração realizada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurante"
  /restaurante/delete/{id}:
    delete:
      tags:
      - "Restaurante"
      summary: Remove um determinado restaurante
      operationId: "restauranteDelete"
      parameters:
      - in: "path"
        name: id
        description: "Código do restaurante a ser buscado"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna objeto com as informações da alteração realizada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    nullable: false
                    default: false
                  message:
                    type: string
                  statusCode:
                    type: integer
  
  /categoriaproduto:
    get:
      tags:
      - "Categoria Produto"
      summary: Retorna lista de restaurantes
      operationId: "restauranteAll"
      responses:
        "200":
          description: Retorna objeto contendo as informações do restaurante informado como parametro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfCategoriaProduto"
  /categoriaproduto/{id}:
    get:
      tags:
      - "Categoria Produto"
      summary: Retorna categoria de produto especifica, com base no id informado
      operationId: "categoriaProdutoById"
      parameters:
      - in: "path"
        name: id
        description: "Código da categoria a ser buscado"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna objeto contendo as informações do restaurante informado como parametro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
  /categoriaproduto/create:
    post:
      tags:
      - "Categoria Produto"
      summary: Adiciona uma nova categoria de produto, com base nas informações informadas
      operationId: "categoriaProdutoCreate"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  nullable: false
              required:
                - nome
                - endereco
      responses:
        "200":
          description: Retorna objeto contendo as informações do restaurante informado como parametro.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
  /categoriaproduto/edit/{id}:
    put:
      tags:
      - "Categoria Produto"
      summary: Atualiza as informações de uma determinada categoria de produto
      operationId: "categoriaProdutoEdit"
      parameters:
      - in: "path"
        name: id
        description: "Código da categproa de produto a ser buscada"
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  nullable: false
              required:
                - nome
      responses:
        "200":
          description: Retorna objeto com as informações da alteração realizada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
  /categoriaproduto/delete/{id}:
    delete:
      tags:
      - "Categoria Produto"
      summary: Remove uma determinada categoria de produto
      operationId: "categoriaProdutoDelete"
      parameters:
      - in: "path"
        name: id
        description: "Código da categoria a ser removido"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna objeto com as informações da alteração realizada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    nullable: false
                    default: false
                  message:
                    type: string
                  statusCode:
                    type: integer 
  
  /produto:
    get:
      tags:
      - "Produto"
      summary: Retorna lista de produtos
      operationId: "produtoAll"
      responses:
        "200":
          description: Retorna JSon de objetos contendo as informações de todos os restaurantes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfProduto"
  /produto/{id}:
    get:
      tags:
      - "Produto"
      summary: Retorna produto especifica, com base no id informado
      operationId: "produtoById"
      parameters:
      - in: "path"
        name: id
        description: "Código do produto a ser buscado"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna objeto contendo as informações do produto.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
  /produto/create:
    post:
      tags:
      - "Produto"
      summary: Adiciona um novo produto, com base nas informações informadas
      operationId: "produtoCreate"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_restaurante:
                  type: integer
                nome:
                  type: string
                preco:
                    type: number
                id_categoria:
                  type: integer
                id_foto:
                  type: integer
                  nullable: true
                  default: null
              required:
                - id_restaurante
                - nome
                - preco
                - id_categoria
      responses:
        "200":
          description: Retorna objeto contendo as informações do produto.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
  /produto/edit/{id}:
    put:
      tags:
      - "Produto"
      summary: Atualiza as informações de um determinadao produto
      operationId: "produtoEdit"
      parameters:
      - in: "path"
        name: id
        description: "Código da categproa de produto a ser buscada"
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_restaurante:
                  type: integer
                nome:
                  type: string
                preco:
                    type: number
                id_categoria:
                  type: integer
                id_foto:
                  type: integer
                  nullable: true
                  default: null
              required:
                - id_restaurante
                - nome
                - preco
                - id_categoria
      responses:
        "200":
          description: Retorna objeto com as informações o produto, contendo as alterações
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
  /produto/delete/{id}:
    delete:
      tags:
      - "Produto"
      summary: Remove um determinado produto
      operationId: "produtoDelete"
      parameters:
      - in: "path"
        name: id
        description: "Código do produto a ser removido"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna um bolleano informando se deu certo a exclusão.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    nullable: false
                    default: false
                  message:
                    type: string
                  statusCode:
                    type: integer 

  /promocaoproduto:
    get:
      tags:
      - "Promoção de Produtos"
      summary: Retorna lista de promoções
      operationId: "PromocaoProdutoAll"
      responses:
        "200":
          description: Retorna JSon de objetos contendo as informações de todos as promoções
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfPromocaoProduto"
  /promocaoproduto/{id}:
    get:
      tags:
      - "Promoção de Produtos"
      summary: Retorna uma promoção especifica, com base no id informado
      operationId: "promocaoProdutoById"
      parameters:
      - in: "path"
        name: id
        description: "Código da promoção a ser buscado"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna objeto contendo as informações da promoção
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromocaoProduto"
  /promocaoproduto/create:
    post:
      tags:
      - "Promoção de Produtos"
      summary: Adiciona uma nova promoção, com base nas informações informadas
      operationId: "promocaoProdutoCreate"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_produto:
                  type: integer
                  nullable: false
                descricao:
                  type: string
                preco:
                    type: number
                    nullable: false
                    default: 0.0
              required:
                - id_produto
                - preco
      responses:
        "200":
          description: Retorna objeto contendo as informações do produto.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
  /promocaoproduto/edit/{id}:
    put:
      tags:
      - "Promoção de Produtos"
      summary: Atualiza as informações de uma determinada promoção
      operationId: "promocaoProdutoEdit"
      parameters:
      - in: "path"
        name: id
        description: "Código da promoção a ser buscada"
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_produto:
                  type: integer
                  nullable: false
                descricao:
                  type: string
                preco:
                    type: number
                    nullable: false
                    default: 0.0
              required:
                - id_produto
                - preco
      responses:
        "200":
          description: Retorna objeto com as informações da promoção, contendo as alterações
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
  /promocaoproduto/delete/{id}:
    delete:
      tags:
      - "Promoção de Produtos"
      summary: Remove uma determinada promoção
      operationId: "promocaoProdutoDelete"
      parameters:
      - in: "path"
        name: id
        description: "Código da promoção a ser removida"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna um bolleano informando se deu certo a exclusão.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    nullable: false
                    default: false
                  message:
                    type: string
                  statusCode:
                    type: integer  

  /horario/promocaoproduto/{id}:
    get:
      tags:
      - "Horário da Promoção de Produtos"
      summary: Retorna um JSon contendo um array com os horários cadastrados
      operationId: "horarioPromocaoProdutoById"
      parameters:
      - in: "path"
        name: id
        description: "Código do produto na qual deseja ver os horários"
        schema:
          type: integer
        required: true
      responses:
        "200":
          description: Retorna um JSon contendo um array com os horários cadastrados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromocaoProduto"
  /horario/promocaoproduto/create:
    post:
      tags:
      - "Horário da Promoção de Produtos"
      summary: Adiciona horários as promoções de produtos
      operationId: "horarioPromocaoProdutoCreate"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_promocao_produto:
                  type: integer
                  nullable: false
                dia:
                  type: integer
                  $ref: "#/components/schemas/DiaDaSemana"
                  nullable: false
                hora_inicio:
                  type: string
                  default: "00:00"
                  nullable: false
                hora_termino:
                  type: string
                  default: "00:00"
                  nullable: false
                exceto_feriado:
                  type: boolean
                  default: false
                  nullable: false
              required:
                - id_produto
                - dia
                - hora_inicio
                - hora_termino
      responses:
        "200":
          description: Retorna objeto contendo as informações do horário da promocao do produto.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
  /horario/promocaoproduto/delete/{id}:
    delete:
      tags:
      - "Horário da Promoção de Produtos"
      summary: Remove um determinado horário de uma determinada promoção
      operationId: "promocaoProdutoDelete"
      parameters:
        - in: "path"
          name: id_promocao_produto
          schema:
            type: integer
          required: true
        - in: "path"
          name: id_horario
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Retorna um bolleano informando se deu certo a exclusão.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                    nullable: false
                    default: false
                  message:
                    type: string
                  statusCode:
                    type: integer  



  ##Horário Promocao
  ##Horário Funcionamento

components:
  schemas:
    ReturnMessage:
      type: object
      properties:
        data:
          type: object
        statusCode:
          type: integer
        message:
          type: string

    DiaDaSemana:
      type: integer
      enum:
        - Domingo
        - Segunda
        - Terca
        - Quarta
        - Quinta
        - Sexta
        - Sabado

    Restaurante:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        endereco:
          type: string
        id_foto:
          type: integer
          nullable: true
          default: null
      required:
        - id
        - nome
        - endereco
    ArrayOfRestaurante:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          nome:
            type: string
          endereco:
            type: string
          id_foto:
            type: integer
            nullable: true
            default: null
    
    CategoriaProduto:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
      required:
        - id
        - nome
    ArrayOfCategoriaProduto:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          nome:
            type: string
    
    Produto:
      type: object
      properties:
        id:
          type: integer
        id_restaurante:
          type: integer
        nome:
          type: string
        preco:
            type: number
        id_categoria:
          type: integer
        id_foto:
          type: integer
      required:
        - id
        - id_restaurante
        - nome
        - preco
        - id_categoria
    ArrayOfProduto:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          id_restaurante:
            type: integer
          nome:
            type: string
          preco:
              type: number
          id_categoria:
            type: integer
          id_foto:
            type: integer
        required:
          - id
          - id_restaurante
          - nome
          - preco
          - id_categoria

    PromocaoProduto:
      type: object
      properties:
        id:
          type: integer
        id_produto:
          type: integer
        descricao:
          type: string
        preco:
            type: number
      required:
        - id
        - id_produto
        - preco
    ArrayOfPromocaoProduto:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          id_produto:
            type: integer
          descricao:
            type: string
          preco:
              type: number
        required:
          - id
          - id_produto
          - preco

    